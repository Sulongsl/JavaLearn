　　总结来说，Lock和synchronized有以下几点不同：

　　1）Lock是一个接口，而synchronized是Java中的关键字，synchronized是内置的语言实现；

　　2）synchronized在发生异常时，会自动释放线程占有的锁，因此不会导致死锁现象发生；而Lock在发生异常时，如果没有主动通过unLock()去释放锁，则很可能造成死锁现象，因此使用Lock时需要在finally块中释放锁；

　　3）Lock可以让等待锁的线程响应中断，而synchronized却不行，使用synchronized时，等待的线程会一直等待下去，不能够响应中断；

　　4）通过Lock可以知道有没有成功获取锁，而synchronized却无法办到。

　　5）Lock可以提高多个线程进行读操作的效率。


1.可重入锁: synchronized修饰的方法A与方法B  在A中调用方法B 则线程不需要重新申请锁;那么这个锁叫做可重入锁
2.可中断锁: 线程A与B A占用锁,B处于等待状态 若B线程 可以终端等待状态或在其他线程中中断B的等待状态 则为可中断锁
        lockInterruptibly()的用法时已经体现了Lock的可中断性。
3.公平锁:

原子性
可见性
有序性